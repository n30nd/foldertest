[2024-11-23 11:24:11,283][flwr][WARNING] - Both server and strategy were provided, ignoring strategy
[2024-11-23 11:24:11,283][flwr][INFO] - Starting Flower simulation, config: ServerConfig(num_rounds=2, round_timeout=None)
[2024-11-23 11:24:16,531][flwr][INFO] - Flower VCE: Ray initialized with resources: {'memory': 6902066382.0, 'object_store_memory': 3451033190.0, 'CPU': 12.0, 'node:192.168.1.62': 1.0, 'GPU': 1.0, 'accelerator_type:G': 1.0, 'node:__internal_head__': 1.0}
[2024-11-23 11:24:16,531][flwr][INFO] - Flower VCE: Resources for each Virtual Client: {'num_cpus': 6, 'num_gpus': 0.5}
[2024-11-23 11:24:16,543][flwr][INFO] - Flower VCE: Creating VirtualClientEngineActorPool with 2 actors
[2024-11-23 11:24:16,543][flwr][INFO] - Initializing global parameters
[2024-11-23 11:24:16,543][flwr][INFO] - Requesting initial parameters from one random client
[2024-11-23 11:24:19,747][flwr][INFO] - Received initial parameters from one random client
[2024-11-23 11:24:19,747][flwr][INFO] - Evaluating initial parameters
[2024-11-23 11:24:19,909][flwr][ERROR] - Error(s) in loading state_dict for EfficientNetModel:
	Missing key(s) in state_dict: "model.features.5.1.block.2.fc2.bias", "model.features.5.1.block.3.0.weight", "model.features.5.1.block.3.1.weight", "model.features.5.1.block.3.1.bias", "model.features.5.1.block.3.1.running_mean", "model.features.5.1.block.3.1.running_var", "model.features.5.2.block.0.0.weight", "model.features.5.2.block.0.1.weight", "model.features.5.2.block.0.1.bias", "model.features.5.2.block.0.1.running_mean", "model.features.5.2.block.0.1.running_var", "model.features.5.2.block.1.0.weight", "model.features.5.2.block.1.1.weight", "model.features.5.2.block.1.1.bias", "model.features.5.2.block.1.1.running_mean", "model.features.5.2.block.1.1.running_var", "model.features.5.2.block.2.fc1.weight", "model.features.5.2.block.2.fc1.bias", "model.features.5.2.block.2.fc2.weight", "model.features.5.2.block.2.fc2.bias", "model.features.5.2.block.3.0.weight", "model.features.5.2.block.3.1.weight", "model.features.5.2.block.3.1.bias", "model.features.5.2.block.3.1.running_mean", "model.features.5.2.block.3.1.running_var", "model.features.6.0.block.0.0.weight", "model.features.6.0.block.0.1.weight", "model.features.6.0.block.0.1.bias", "model.features.6.0.block.0.1.running_mean", "model.features.6.0.block.0.1.running_var", "model.features.6.0.block.1.0.weight", "model.features.6.0.block.1.1.weight", "model.features.6.0.block.1.1.bias", "model.features.6.0.block.1.1.running_mean", "model.features.6.0.block.1.1.running_var", "model.features.6.0.block.2.fc1.weight", "model.features.6.0.block.2.fc1.bias", "model.features.6.0.block.2.fc2.weight", "model.features.6.0.block.2.fc2.bias", "model.features.6.0.block.3.0.weight", "model.features.6.0.block.3.1.weight", "model.features.6.0.block.3.1.bias", "model.features.6.0.block.3.1.running_mean", "model.features.6.0.block.3.1.running_var", "model.features.6.1.block.0.0.weight", "model.features.6.1.block.0.1.weight", "model.features.6.1.block.0.1.bias", "model.features.6.1.block.0.1.running_mean", "model.features.6.1.block.0.1.running_var", "model.features.6.1.block.1.0.weight", "model.features.6.1.block.1.1.weight", "model.features.6.1.block.1.1.bias", "model.features.6.1.block.1.1.running_mean", "model.features.6.1.block.1.1.running_var", "model.features.6.1.block.2.fc1.weight", "model.features.6.1.block.2.fc1.bias", "model.features.6.1.block.2.fc2.weight", "model.features.6.1.block.2.fc2.bias", "model.features.6.1.block.3.0.weight", "model.features.6.1.block.3.1.weight", "model.features.6.1.block.3.1.bias", "model.features.6.1.block.3.1.running_mean", "model.features.6.1.block.3.1.running_var", "model.features.6.2.block.0.0.weight", "model.features.6.2.block.0.1.weight", "model.features.6.2.block.0.1.bias", "model.features.6.2.block.0.1.running_mean", "model.features.6.2.block.0.1.running_var", "model.features.6.2.block.1.0.weight", "model.features.6.2.block.1.1.weight", "model.features.6.2.block.1.1.bias", "model.features.6.2.block.1.1.running_mean", "model.features.6.2.block.1.1.running_var", "model.features.6.2.block.2.fc1.weight", "model.features.6.2.block.2.fc1.bias", "model.features.6.2.block.2.fc2.weight", "model.features.6.2.block.2.fc2.bias", "model.features.6.2.block.3.0.weight", "model.features.6.2.block.3.1.weight", "model.features.6.2.block.3.1.bias", "model.features.6.2.block.3.1.running_mean", "model.features.6.2.block.3.1.running_var", "model.features.6.3.block.0.0.weight", "model.features.6.3.block.0.1.weight", "model.features.6.3.block.0.1.bias", "model.features.6.3.block.0.1.running_mean", "model.features.6.3.block.0.1.running_var", "model.features.6.3.block.1.0.weight", "model.features.6.3.block.1.1.weight", "model.features.6.3.block.1.1.bias", "model.features.6.3.block.1.1.running_mean", "model.features.6.3.block.1.1.running_var", "model.features.6.3.block.2.fc1.weight", "model.features.6.3.block.2.fc1.bias", "model.features.6.3.block.2.fc2.weight", "model.features.6.3.block.2.fc2.bias", "model.features.6.3.block.3.0.weight", "model.features.6.3.block.3.1.weight", "model.features.6.3.block.3.1.bias", "model.features.6.3.block.3.1.running_mean", "model.features.6.3.block.3.1.running_var", "model.features.7.0.block.0.0.weight", "model.features.7.0.block.0.1.weight", "model.features.7.0.block.0.1.bias", "model.features.7.0.block.0.1.running_mean", "model.features.7.0.block.0.1.running_var", "model.features.7.0.block.1.0.weight", "model.features.7.0.block.1.1.weight", "model.features.7.0.block.1.1.bias", "model.features.7.0.block.1.1.running_mean", "model.features.7.0.block.1.1.running_var", "model.features.7.0.block.2.fc1.weight", "model.features.7.0.block.2.fc1.bias", "model.features.7.0.block.2.fc2.weight", "model.features.7.0.block.2.fc2.bias", "model.features.7.0.block.3.0.weight", "model.features.7.0.block.3.1.weight", "model.features.7.0.block.3.1.bias", "model.features.7.0.block.3.1.running_mean", "model.features.7.0.block.3.1.running_var", "model.features.8.0.weight", "model.features.8.1.weight", "model.features.8.1.bias", "model.features.8.1.running_mean", "model.features.8.1.running_var", "model.classifier.1.weight", "model.classifier.1.bias". 
	size mismatch for model.features.0.1.running_mean: copying a param with shape torch.Size([32, 1, 3, 3]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for model.features.1.0.block.0.0.weight: copying a param with shape torch.Size([8, 32, 1, 1]) from checkpoint, the shape in current model is torch.Size([32, 1, 3, 3]).
	size mismatch for model.features.1.0.block.0.1.weight: copying a param with shape torch.Size([8]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for model.features.1.0.block.0.1.bias: copying a param with shape torch.Size([32, 8, 1, 1]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for model.features.1.0.block.0.1.running_var: copying a param with shape torch.Size([16, 32, 1, 1]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for model.features.1.0.block.1.fc1.weight: copying a param with shape torch.Size([16]) from checkpoint, the shape in current model is torch.Size([8, 32, 1, 1]).
	size mismatch for model.features.1.0.block.1.fc1.bias: copying a param with shape torch.Size([96, 16, 1, 1]) from checkpoint, the shape in current model is torch.Size([8]).
	size mismatch for model.features.1.0.block.1.fc2.weight: copying a param with shape torch.Size([96]) from checkpoint, the shape in current model is torch.Size([32, 8, 1, 1]).
	size mismatch for model.features.1.0.block.1.fc2.bias: copying a param with shape torch.Size([96]) from checkpoint, the shape in current model is torch.Size([32]).
	size mismatch for model.features.1.0.block.2.0.weight: copying a param with shape torch.Size([96, 1, 3, 3]) from checkpoint, the shape in current model is torch.Size([16, 32, 1, 1]).
	size mismatch for model.features.1.0.block.2.1.weight: copying a param with shape torch.Size([96]) from checkpoint, the shape in current model is torch.Size([16]).
	size mismatch for model.features.1.0.block.2.1.bias: copying a param with shape torch.Size([96]) from checkpoint, the shape in current model is torch.Size([16]).
	size mismatch for model.features.1.0.block.2.1.running_mean: copying a param with shape torch.Size([4, 96, 1, 1]) from checkpoint, the shape in current model is torch.Size([16]).
	size mismatch for model.features.1.0.block.2.1.running_var: copying a param with shape torch.Size([4]) from checkpoint, the shape in current model is torch.Size([16]).
	size mismatch for model.features.1.0.block.2.1.num_batches_tracked: copying a param with shape torch.Size([96, 4, 1, 1]) from checkpoint, the shape in current model is torch.Size([]).
	size mismatch for model.features.2.0.block.0.0.weight: copying a param with shape torch.Size([96]) from checkpoint, the shape in current model is torch.Size([96, 16, 1, 1]).
	size mismatch for model.features.2.0.block.0.1.weight: copying a param with shape torch.Size([24, 96, 1, 1]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for model.features.2.0.block.0.1.bias: copying a param with shape torch.Size([24]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for model.features.2.0.block.0.1.running_mean: copying a param with shape torch.Size([24]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for model.features.2.0.block.0.1.running_var: copying a param with shape torch.Size([144, 24, 1, 1]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for model.features.2.0.block.1.0.weight: copying a param with shape torch.Size([144]) from checkpoint, the shape in current model is torch.Size([96, 1, 3, 3]).
	size mismatch for model.features.2.0.block.1.1.weight: copying a param with shape torch.Size([144, 1, 3, 3]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for model.features.2.0.block.1.1.bias: copying a param with shape torch.Size([144]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for model.features.2.0.block.1.1.running_mean: copying a param with shape torch.Size([144]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for model.features.2.0.block.1.1.running_var: copying a param with shape torch.Size([6, 144, 1, 1]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for model.features.2.0.block.2.fc1.weight: copying a param with shape torch.Size([144, 6, 1, 1]) from checkpoint, the shape in current model is torch.Size([4, 96, 1, 1]).
	size mismatch for model.features.2.0.block.2.fc1.bias: copying a param with shape torch.Size([144]) from checkpoint, the shape in current model is torch.Size([4]).
	size mismatch for model.features.2.0.block.2.fc2.weight: copying a param with shape torch.Size([24, 144, 1, 1]) from checkpoint, the shape in current model is torch.Size([96, 4, 1, 1]).
	size mismatch for model.features.2.0.block.2.fc2.bias: copying a param with shape torch.Size([24]) from checkpoint, the shape in current model is torch.Size([96]).
	size mismatch for model.features.2.0.block.3.0.weight: copying a param with shape torch.Size([24]) from checkpoint, the shape in current model is torch.Size([24, 96, 1, 1]).
	size mismatch for model.features.2.0.block.3.1.weight: copying a param with shape torch.Size([144, 24, 1, 1]) from checkpoint, the shape in current model is torch.Size([24]).
	size mismatch for model.features.2.0.block.3.1.bias: copying a param with shape torch.Size([144]) from checkpoint, the shape in current model is torch.Size([24]).
	size mismatch for model.features.2.0.block.3.1.running_mean: copying a param with shape torch.Size([144]) from checkpoint, the shape in current model is torch.Size([24]).
	size mismatch for model.features.2.0.block.3.1.running_var: copying a param with shape torch.Size([144, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([24]).
	size mismatch for model.features.2.1.block.0.0.weight: copying a param with shape torch.Size([144]) from checkpoint, the shape in current model is torch.Size([144, 24, 1, 1]).
	size mismatch for model.features.2.1.block.0.1.weight: copying a param with shape torch.Size([6, 144, 1, 1]) from checkpoint, the shape in current model is torch.Size([144]).
	size mismatch for model.features.2.1.block.0.1.bias: copying a param with shape torch.Size([6]) from checkpoint, the shape in current model is torch.Size([144]).
	size mismatch for model.features.2.1.block.0.1.running_mean: copying a param with shape torch.Size([144, 6, 1, 1]) from checkpoint, the shape in current model is torch.Size([144]).
	size mismatch for model.features.2.1.block.0.1.num_batches_tracked: copying a param with shape torch.Size([40, 144, 1, 1]) from checkpoint, the shape in current model is torch.Size([]).
	size mismatch for model.features.2.1.block.1.0.weight: copying a param with shape torch.Size([40]) from checkpoint, the shape in current model is torch.Size([144, 1, 3, 3]).
	size mismatch for model.features.2.1.block.1.1.weight: copying a param with shape torch.Size([40]) from checkpoint, the shape in current model is torch.Size([144]).
	size mismatch for model.features.2.1.block.1.1.bias: copying a param with shape torch.Size([240, 40, 1, 1]) from checkpoint, the shape in current model is torch.Size([144]).
	size mismatch for model.features.2.1.block.1.1.running_mean: copying a param with shape torch.Size([240]) from checkpoint, the shape in current model is torch.Size([144]).
	size mismatch for model.features.2.1.block.1.1.running_var: copying a param with shape torch.Size([240]) from checkpoint, the shape in current model is torch.Size([144]).
	size mismatch for model.features.2.1.block.1.1.num_batches_tracked: copying a param with shape torch.Size([240, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([]).
	size mismatch for model.features.2.1.block.2.fc1.weight: copying a param with shape torch.Size([240]) from checkpoint, the shape in current model is torch.Size([6, 144, 1, 1]).
	size mismatch for model.features.2.1.block.2.fc1.bias: copying a param with shape torch.Size([240]) from checkpoint, the shape in current model is torch.Size([6]).
	size mismatch for model.features.2.1.block.2.fc2.weight: copying a param with shape torch.Size([10, 240, 1, 1]) from checkpoint, the shape in current model is torch.Size([144, 6, 1, 1]).
	size mismatch for model.features.2.1.block.2.fc2.bias: copying a param with shape torch.Size([10]) from checkpoint, the shape in current model is torch.Size([144]).
	size mismatch for model.features.2.1.block.3.0.weight: copying a param with shape torch.Size([240, 10, 1, 1]) from checkpoint, the shape in current model is torch.Size([24, 144, 1, 1]).
	size mismatch for model.features.2.1.block.3.1.weight: copying a param with shape torch.Size([240]) from checkpoint, the shape in current model is torch.Size([24]).
	size mismatch for model.features.2.1.block.3.1.bias: copying a param with shape torch.Size([40, 240, 1, 1]) from checkpoint, the shape in current model is torch.Size([24]).
	size mismatch for model.features.2.1.block.3.1.running_mean: copying a param with shape torch.Size([40]) from checkpoint, the shape in current model is torch.Size([24]).
	size mismatch for model.features.2.1.block.3.1.running_var: copying a param with shape torch.Size([40]) from checkpoint, the shape in current model is torch.Size([24]).
	size mismatch for model.features.2.1.block.3.1.num_batches_tracked: copying a param with shape torch.Size([240, 40, 1, 1]) from checkpoint, the shape in current model is torch.Size([]).
	size mismatch for model.features.3.0.block.0.0.weight: copying a param with shape torch.Size([240]) from checkpoint, the shape in current model is torch.Size([144, 24, 1, 1]).
	size mismatch for model.features.3.0.block.0.1.weight: copying a param with shape torch.Size([240]) from checkpoint, the shape in current model is torch.Size([144]).
	size mismatch for model.features.3.0.block.0.1.bias: copying a param with shape torch.Size([240, 1, 3, 3]) from checkpoint, the shape in current model is torch.Size([144]).
	size mismatch for model.features.3.0.block.0.1.running_mean: copying a param with shape torch.Size([240]) from checkpoint, the shape in current model is torch.Size([144]).
	size mismatch for model.features.3.0.block.0.1.running_var: copying a param with shape torch.Size([240]) from checkpoint, the shape in current model is torch.Size([144]).
	size mismatch for model.features.3.0.block.0.1.num_batches_tracked: copying a param with shape torch.Size([10, 240, 1, 1]) from checkpoint, the shape in current model is torch.Size([]).
	size mismatch for model.features.3.0.block.1.0.weight: copying a param with shape torch.Size([10]) from checkpoint, the shape in current model is torch.Size([144, 1, 5, 5]).
	size mismatch for model.features.3.0.block.1.1.weight: copying a param with shape torch.Size([240, 10, 1, 1]) from checkpoint, the shape in current model is torch.Size([144]).
	size mismatch for model.features.3.0.block.1.1.bias: copying a param with shape torch.Size([240]) from checkpoint, the shape in current model is torch.Size([144]).
	size mismatch for model.features.3.0.block.1.1.running_mean: copying a param with shape torch.Size([80, 240, 1, 1]) from checkpoint, the shape in current model is torch.Size([144]).
	size mismatch for model.features.3.0.block.1.1.running_var: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([144]).
	size mismatch for model.features.3.0.block.2.fc1.weight: copying a param with shape torch.Size([480, 80, 1, 1]) from checkpoint, the shape in current model is torch.Size([6, 144, 1, 1]).
	size mismatch for model.features.3.0.block.2.fc1.bias: copying a param with shape torch.Size([480]) from checkpoint, the shape in current model is torch.Size([6]).
	size mismatch for model.features.3.0.block.2.fc2.weight: copying a param with shape torch.Size([480]) from checkpoint, the shape in current model is torch.Size([144, 6, 1, 1]).
	size mismatch for model.features.3.0.block.2.fc2.bias: copying a param with shape torch.Size([480, 1, 3, 3]) from checkpoint, the shape in current model is torch.Size([144]).
	size mismatch for model.features.3.0.block.3.0.weight: copying a param with shape torch.Size([480]) from checkpoint, the shape in current model is torch.Size([40, 144, 1, 1]).
	size mismatch for model.features.3.0.block.3.1.weight: copying a param with shape torch.Size([480]) from checkpoint, the shape in current model is torch.Size([40]).
	size mismatch for model.features.3.0.block.3.1.bias: copying a param with shape torch.Size([20, 480, 1, 1]) from checkpoint, the shape in current model is torch.Size([40]).
	size mismatch for model.features.3.0.block.3.1.running_mean: copying a param with shape torch.Size([20]) from checkpoint, the shape in current model is torch.Size([40]).
	size mismatch for model.features.3.0.block.3.1.running_var: copying a param with shape torch.Size([480, 20, 1, 1]) from checkpoint, the shape in current model is torch.Size([40]).
	size mismatch for model.features.3.1.block.0.0.weight: copying a param with shape torch.Size([80, 480, 1, 1]) from checkpoint, the shape in current model is torch.Size([240, 40, 1, 1]).
	size mismatch for model.features.3.1.block.0.1.weight: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([240]).
	size mismatch for model.features.3.1.block.0.1.bias: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([240]).
	size mismatch for model.features.3.1.block.0.1.running_mean: copying a param with shape torch.Size([480, 80, 1, 1]) from checkpoint, the shape in current model is torch.Size([240]).
	size mismatch for model.features.3.1.block.0.1.running_var: copying a param with shape torch.Size([480]) from checkpoint, the shape in current model is torch.Size([240]).
	size mismatch for model.features.3.1.block.1.0.weight: copying a param with shape torch.Size([480, 1, 3, 3]) from checkpoint, the shape in current model is torch.Size([240, 1, 5, 5]).
	size mismatch for model.features.3.1.block.1.1.weight: copying a param with shape torch.Size([480]) from checkpoint, the shape in current model is torch.Size([240]).
	size mismatch for model.features.3.1.block.1.1.bias: copying a param with shape torch.Size([480]) from checkpoint, the shape in current model is torch.Size([240]).
	size mismatch for model.features.3.1.block.1.1.running_mean: copying a param with shape torch.Size([20, 480, 1, 1]) from checkpoint, the shape in current model is torch.Size([240]).
	size mismatch for model.features.3.1.block.1.1.running_var: copying a param with shape torch.Size([20]) from checkpoint, the shape in current model is torch.Size([240]).
	size mismatch for model.features.3.1.block.1.1.num_batches_tracked: copying a param with shape torch.Size([480, 20, 1, 1]) from checkpoint, the shape in current model is torch.Size([]).
	size mismatch for model.features.3.1.block.2.fc1.weight: copying a param with shape torch.Size([480]) from checkpoint, the shape in current model is torch.Size([10, 240, 1, 1]).
	size mismatch for model.features.3.1.block.2.fc1.bias: copying a param with shape torch.Size([80, 480, 1, 1]) from checkpoint, the shape in current model is torch.Size([10]).
	size mismatch for model.features.3.1.block.2.fc2.weight: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([240, 10, 1, 1]).
	size mismatch for model.features.3.1.block.2.fc2.bias: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([240]).
	size mismatch for model.features.3.1.block.3.0.weight: copying a param with shape torch.Size([480, 80, 1, 1]) from checkpoint, the shape in current model is torch.Size([40, 240, 1, 1]).
	size mismatch for model.features.3.1.block.3.1.weight: copying a param with shape torch.Size([480]) from checkpoint, the shape in current model is torch.Size([40]).
	size mismatch for model.features.3.1.block.3.1.bias: copying a param with shape torch.Size([480]) from checkpoint, the shape in current model is torch.Size([40]).
	size mismatch for model.features.3.1.block.3.1.running_mean: copying a param with shape torch.Size([480, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([40]).
	size mismatch for model.features.3.1.block.3.1.running_var: copying a param with shape torch.Size([480]) from checkpoint, the shape in current model is torch.Size([40]).
	size mismatch for model.features.4.0.block.0.0.weight: copying a param with shape torch.Size([20, 480, 1, 1]) from checkpoint, the shape in current model is torch.Size([240, 40, 1, 1]).
	size mismatch for model.features.4.0.block.0.1.weight: copying a param with shape torch.Size([20]) from checkpoint, the shape in current model is torch.Size([240]).
	size mismatch for model.features.4.0.block.0.1.bias: copying a param with shape torch.Size([480, 20, 1, 1]) from checkpoint, the shape in current model is torch.Size([240]).
	size mismatch for model.features.4.0.block.0.1.running_mean: copying a param with shape torch.Size([480]) from checkpoint, the shape in current model is torch.Size([240]).
	size mismatch for model.features.4.0.block.0.1.running_var: copying a param with shape torch.Size([112, 480, 1, 1]) from checkpoint, the shape in current model is torch.Size([240]).
	size mismatch for model.features.4.0.block.1.0.weight: copying a param with shape torch.Size([112]) from checkpoint, the shape in current model is torch.Size([240, 1, 3, 3]).
	size mismatch for model.features.4.0.block.1.1.weight: copying a param with shape torch.Size([672, 112, 1, 1]) from checkpoint, the shape in current model is torch.Size([240]).
	size mismatch for model.features.4.0.block.1.1.bias: copying a param with shape torch.Size([672]) from checkpoint, the shape in current model is torch.Size([240]).
	size mismatch for model.features.4.0.block.1.1.running_mean: copying a param with shape torch.Size([672]) from checkpoint, the shape in current model is torch.Size([240]).
	size mismatch for model.features.4.0.block.1.1.running_var: copying a param with shape torch.Size([672, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([240]).
	size mismatch for model.features.4.0.block.2.fc1.weight: copying a param with shape torch.Size([672]) from checkpoint, the shape in current model is torch.Size([10, 240, 1, 1]).
	size mismatch for model.features.4.0.block.2.fc1.bias: copying a param with shape torch.Size([28, 672, 1, 1]) from checkpoint, the shape in current model is torch.Size([10]).
	size mismatch for model.features.4.0.block.2.fc2.weight: copying a param with shape torch.Size([28]) from checkpoint, the shape in current model is torch.Size([240, 10, 1, 1]).
	size mismatch for model.features.4.0.block.2.fc2.bias: copying a param with shape torch.Size([672, 28, 1, 1]) from checkpoint, the shape in current model is torch.Size([240]).
	size mismatch for model.features.4.0.block.3.0.weight: copying a param with shape torch.Size([672]) from checkpoint, the shape in current model is torch.Size([80, 240, 1, 1]).
	size mismatch for model.features.4.0.block.3.1.weight: copying a param with shape torch.Size([112, 672, 1, 1]) from checkpoint, the shape in current model is torch.Size([80]).
	size mismatch for model.features.4.0.block.3.1.bias: copying a param with shape torch.Size([112]) from checkpoint, the shape in current model is torch.Size([80]).
	size mismatch for model.features.4.0.block.3.1.running_mean: copying a param with shape torch.Size([112]) from checkpoint, the shape in current model is torch.Size([80]).
	size mismatch for model.features.4.0.block.3.1.running_var: copying a param with shape torch.Size([672, 112, 1, 1]) from checkpoint, the shape in current model is torch.Size([80]).
	size mismatch for model.features.4.1.block.0.0.weight: copying a param with shape torch.Size([672]) from checkpoint, the shape in current model is torch.Size([480, 80, 1, 1]).
	size mismatch for model.features.4.1.block.0.1.weight: copying a param with shape torch.Size([672, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.4.1.block.0.1.bias: copying a param with shape torch.Size([672]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.4.1.block.0.1.running_mean: copying a param with shape torch.Size([672]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.4.1.block.0.1.running_var: copying a param with shape torch.Size([28, 672, 1, 1]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.4.1.block.1.0.weight: copying a param with shape torch.Size([672, 28, 1, 1]) from checkpoint, the shape in current model is torch.Size([480, 1, 3, 3]).
	size mismatch for model.features.4.1.block.1.1.weight: copying a param with shape torch.Size([672]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.4.1.block.1.1.bias: copying a param with shape torch.Size([112, 672, 1, 1]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.4.1.block.1.1.running_mean: copying a param with shape torch.Size([112]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.4.1.block.1.1.running_var: copying a param with shape torch.Size([112]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.4.1.block.1.1.num_batches_tracked: copying a param with shape torch.Size([672, 112, 1, 1]) from checkpoint, the shape in current model is torch.Size([]).
	size mismatch for model.features.4.1.block.2.fc1.weight: copying a param with shape torch.Size([672]) from checkpoint, the shape in current model is torch.Size([20, 480, 1, 1]).
	size mismatch for model.features.4.1.block.2.fc1.bias: copying a param with shape torch.Size([672]) from checkpoint, the shape in current model is torch.Size([20]).
	size mismatch for model.features.4.1.block.2.fc2.weight: copying a param with shape torch.Size([672, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([480, 20, 1, 1]).
	size mismatch for model.features.4.1.block.2.fc2.bias: copying a param with shape torch.Size([672]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.4.1.block.3.0.weight: copying a param with shape torch.Size([672]) from checkpoint, the shape in current model is torch.Size([80, 480, 1, 1]).
	size mismatch for model.features.4.1.block.3.1.weight: copying a param with shape torch.Size([28, 672, 1, 1]) from checkpoint, the shape in current model is torch.Size([80]).
	size mismatch for model.features.4.1.block.3.1.bias: copying a param with shape torch.Size([28]) from checkpoint, the shape in current model is torch.Size([80]).
	size mismatch for model.features.4.1.block.3.1.running_mean: copying a param with shape torch.Size([672, 28, 1, 1]) from checkpoint, the shape in current model is torch.Size([80]).
	size mismatch for model.features.4.1.block.3.1.running_var: copying a param with shape torch.Size([672]) from checkpoint, the shape in current model is torch.Size([80]).
	size mismatch for model.features.4.1.block.3.1.num_batches_tracked: copying a param with shape torch.Size([192, 672, 1, 1]) from checkpoint, the shape in current model is torch.Size([]).
	size mismatch for model.features.4.2.block.0.0.weight: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([480, 80, 1, 1]).
	size mismatch for model.features.4.2.block.0.1.weight: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.4.2.block.0.1.bias: copying a param with shape torch.Size([1152, 192, 1, 1]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.4.2.block.0.1.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.4.2.block.0.1.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.4.2.block.0.1.num_batches_tracked: copying a param with shape torch.Size([1152, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([]).
	size mismatch for model.features.4.2.block.1.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([480, 1, 3, 3]).
	size mismatch for model.features.4.2.block.1.1.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.4.2.block.1.1.bias: copying a param with shape torch.Size([48, 1152, 1, 1]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.4.2.block.1.1.running_mean: copying a param with shape torch.Size([48]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.4.2.block.1.1.running_var: copying a param with shape torch.Size([1152, 48, 1, 1]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.4.2.block.2.fc1.weight: copying a param with shape torch.Size([192, 1152, 1, 1]) from checkpoint, the shape in current model is torch.Size([20, 480, 1, 1]).
	size mismatch for model.features.4.2.block.2.fc1.bias: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([20]).
	size mismatch for model.features.4.2.block.2.fc2.weight: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([480, 20, 1, 1]).
	size mismatch for model.features.4.2.block.2.fc2.bias: copying a param with shape torch.Size([1152, 192, 1, 1]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.4.2.block.3.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([80, 480, 1, 1]).
	size mismatch for model.features.4.2.block.3.1.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([80]).
	size mismatch for model.features.4.2.block.3.1.bias: copying a param with shape torch.Size([1152, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80]).
	size mismatch for model.features.4.2.block.3.1.running_mean: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([80]).
	size mismatch for model.features.4.2.block.3.1.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([80]).
	size mismatch for model.features.4.2.block.3.1.num_batches_tracked: copying a param with shape torch.Size([48, 1152, 1, 1]) from checkpoint, the shape in current model is torch.Size([]).
	size mismatch for model.features.5.0.block.0.0.weight: copying a param with shape torch.Size([48]) from checkpoint, the shape in current model is torch.Size([480, 80, 1, 1]).
	size mismatch for model.features.5.0.block.0.1.weight: copying a param with shape torch.Size([1152, 48, 1, 1]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.5.0.block.0.1.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.5.0.block.0.1.running_mean: copying a param with shape torch.Size([192, 1152, 1, 1]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.5.0.block.0.1.running_var: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.5.0.block.1.0.weight: copying a param with shape torch.Size([1152, 192, 1, 1]) from checkpoint, the shape in current model is torch.Size([480, 1, 5, 5]).
	size mismatch for model.features.5.0.block.1.1.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.5.0.block.1.1.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.5.0.block.1.1.running_mean: copying a param with shape torch.Size([1152, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.5.0.block.1.1.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.5.0.block.2.fc1.weight: copying a param with shape torch.Size([48, 1152, 1, 1]) from checkpoint, the shape in current model is torch.Size([20, 480, 1, 1]).
	size mismatch for model.features.5.0.block.2.fc1.bias: copying a param with shape torch.Size([48]) from checkpoint, the shape in current model is torch.Size([20]).
	size mismatch for model.features.5.0.block.2.fc2.weight: copying a param with shape torch.Size([1152, 48, 1, 1]) from checkpoint, the shape in current model is torch.Size([480, 20, 1, 1]).
	size mismatch for model.features.5.0.block.2.fc2.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([480]).
	size mismatch for model.features.5.0.block.3.0.weight: copying a param with shape torch.Size([192, 1152, 1, 1]) from checkpoint, the shape in current model is torch.Size([112, 480, 1, 1]).
	size mismatch for model.features.5.0.block.3.1.weight: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([112]).
	size mismatch for model.features.5.0.block.3.1.bias: copying a param with shape torch.Size([192]) from checkpoint, the shape in current model is torch.Size([112]).
	size mismatch for model.features.5.0.block.3.1.running_mean: copying a param with shape torch.Size([1152, 192, 1, 1]) from checkpoint, the shape in current model is torch.Size([112]).
	size mismatch for model.features.5.0.block.3.1.running_var: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([112]).
	size mismatch for model.features.5.1.block.0.0.weight: copying a param with shape torch.Size([1152, 1, 3, 3]) from checkpoint, the shape in current model is torch.Size([672, 112, 1, 1]).
	size mismatch for model.features.5.1.block.0.1.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for model.features.5.1.block.0.1.bias: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for model.features.5.1.block.0.1.running_mean: copying a param with shape torch.Size([48, 1152, 1, 1]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for model.features.5.1.block.0.1.running_var: copying a param with shape torch.Size([48]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for model.features.5.1.block.0.1.num_batches_tracked: copying a param with shape torch.Size([1152, 48, 1, 1]) from checkpoint, the shape in current model is torch.Size([]).
	size mismatch for model.features.5.1.block.1.0.weight: copying a param with shape torch.Size([1152]) from checkpoint, the shape in current model is torch.Size([672, 1, 5, 5]).
	size mismatch for model.features.5.1.block.1.1.weight: copying a param with shape torch.Size([320, 1152, 1, 1]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for model.features.5.1.block.1.1.bias: copying a param with shape torch.Size([320]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for model.features.5.1.block.1.1.running_mean: copying a param with shape torch.Size([320]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for model.features.5.1.block.1.1.running_var: copying a param with shape torch.Size([1280, 320, 1, 1]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for model.features.5.1.block.2.fc1.weight: copying a param with shape torch.Size([1280]) from checkpoint, the shape in current model is torch.Size([28, 672, 1, 1]).
	size mismatch for model.features.5.1.block.2.fc1.bias: copying a param with shape torch.Size([2, 1280]) from checkpoint, the shape in current model is torch.Size([28]).
	size mismatch for model.features.5.1.block.2.fc2.weight: copying a param with shape torch.Size([2]) from checkpoint, the shape in current model is torch.Size([672, 28, 1, 1]).
[2024-11-23 11:24:19,910][flwr][ERROR] - Your simulation crashed :(. This could be because of several reasons.The most common are: 
	 > Your system couldn't fit a single VirtualClient: try lowering `client_resources`.
	 > All the actors in your pool crashed. This could be because: 
		 - You clients hit an out-of-memory (OOM) error and actors couldn't recover from it. Try launching your simulation with more generous `client_resources` setting (i.e. it seems {'num_cpus': 6, 'num_gpus': 0.5} is not enough for your workload). Use fewer concurrent actors. 
		 - You were running a multi-node simulation and all worker nodes disconnected. The head node might still be alive but cannot accommodate any actor with resources: {'num_cpus': 6, 'num_gpus': 0.5}.
